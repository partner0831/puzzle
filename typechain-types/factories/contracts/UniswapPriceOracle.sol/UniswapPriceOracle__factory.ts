/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  UniswapPriceOracle,
  UniswapPriceOracleInterface,
} from "../../../contracts/UniswapPriceOracle.sol/UniswapPriceOracle";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "setter",
        type: "address",
      },
    ],
    name: "EmergencyPriceSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "PriceUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "CACHE_DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "POOL_FEE",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PRICE_PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UNISWAP_V3_FACTORY",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDC_TOKEN",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VMF_TOKEN",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRequiredVMFForDollar",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVMFPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceCache",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setEmergencyPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updatePriceCache",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100d75733156100c15760008054336001600160a01b031982168117835560405192916001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a360608201906001600160401b038211838310176100ad575060405260016040670de0b6b3a764000092838152426020820152015260015542600255600160ff19600354161760035560405161055990816100dd8239f35b634e487b7160e01b81526041600452602490fd5b631e4fbdf760e01b815260006004820152602490fd5b600080fdfe604060808152600436101561001357600080fd5b600090813560e01c80630d73ebb5146103d7578063715018a61461038c5780638da5cb5b146103655780638f09c8571461034257806395082d2514610320578063baff9667146102a8578063bb5b26e41461027a578063c2dcb6e41461025e578063dd1b9c4a14610242578063ebe638851461020e578063f2fde38b14610194578063f3038e7414610118578063f73e5aab146100ea5763fa569274146100b957600080fd5b346100e657816003193601126100e6576020905173833589fcd6edb6e08f4c7c32d4f71b54bda029138152f35b5080fd5b50346100e657816003193601126100e65760209051731f98431c8ad98523631ae4a59f267346ea31f9848152f35b50346100e65760203660031901126100e6577fb0e99c124a03b374a88ef4b1e43ee72321daf2b9d6a80175cb987054d12db1d2906004356101576104ba565b600182805161016581610489565b83815242602082015201528060015542600255600160ff1960035416176003558151908152336020820152a180f35b50346100e65760203660031901126100e6576001600160a01b03600435818116929083900361020a576101c56104ba565b82156101f3575082546001600160a01b0319811683178455166000805160206105048339815191528380a380f35b51631e4fbdf760e01b815260048101849052602490fd5b8380fd5b50346100e657816003193601126100e6576060906001549060025460ff600354169082519384526020840152151590820152f35b50346100e657816003193601126100e657602090516101f48152f35b50346100e657816003193601126100e6576020905161012c8152f35b50346100e657816003193601126100e65760209051732213414893259b0c48066acd1763e7fba97859e58152f35b50346100e657816003193601126100e6577f945c1c4e99aa89f648fbfe3df471b916f719e16d960fcec0737d4d56bd696838906102e36104e6565b60018280516102f181610489565b83815242602082015201528060015542600255600160ff1960035416176003558151908152426020820152a180f35b50346100e657816003193601126100e65760209051670de0b6b3a76400008152f35b50346100e657816003193601126100e65760209061035e61043b565b9051908152f35b50346100e657816003193601126100e657905490516001600160a01b039091168152602090f35b82346103d457806003193601126103d4576103a56104ba565b80546001600160a01b03198116825581906001600160a01b03166000805160206105048339815191528280a380f35b80fd5b50346100e657816003193601126100e65760209061035e6103f661043b565b670de0b6b3a764000080821461043657508015610420576a0c097ce7bc90715b34b9f160241b0490565b634e487b7160e01b600052601260045260246000fd5b905090565b60ff600354168061045c575b610456576104536104e6565b90565b60015490565b5060025461012c8101809111610473574210610447565b634e487b7160e01b600052601160045260246000fd5b606081019081106001600160401b038211176104a457604052565b634e487b7160e01b600052604160045260246000fd5b6000546001600160a01b031633036104ce57565b60405163118cdaa760e01b8152336004820152602490fd5b60035460ff16156104f75760015490565b670de0b6b3a76400009056fe8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a264697066735822122089dab2c8f754f5ff6f16d536c2c978f477f3e01083253621631509853115f51e64736f6c63430008180033";

type UniswapPriceOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapPriceOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapPriceOracle__factory extends ContractFactory {
  constructor(...args: UniswapPriceOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      UniswapPriceOracle & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): UniswapPriceOracle__factory {
    return super.connect(runner) as UniswapPriceOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapPriceOracleInterface {
    return new Interface(_abi) as UniswapPriceOracleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): UniswapPriceOracle {
    return new Contract(address, _abi, runner) as unknown as UniswapPriceOracle;
  }
}
