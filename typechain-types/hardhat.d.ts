/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  DeployContractOptions,
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomicfoundation/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "AutomationBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AutomationBase__factory>;
    getContractFactory(
      name: "AutomationCompatible",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AutomationCompatible__factory>;
    getContractFactory(
      name: "AutomationCompatibleInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AutomationCompatibleInterface__factory>;
    getContractFactory(
      name: "VRFCoordinatorV2Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VRFCoordinatorV2Interface__factory>;
    getContractFactory(
      name: "VRFConsumerBaseV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VRFConsumerBaseV2__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pausable__factory>;
    getContractFactory(
      name: "ReentrancyGuard",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReentrancyGuard__factory>;
    getContractFactory(
      name: "ChainlinkVRF",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChainlinkVRF__factory>;
    getContractFactory(
      name: "FreePriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FreePriceOracle__factory>;
    getContractFactory(
      name: "FreeRandomness",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FreeRandomness__factory>;
    getContractFactory(
      name: "IPizzaParty",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPizzaParty__factory>;
    getContractFactory(
      name: "PizzaParty",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PizzaParty__factory>;
    getContractFactory(
      name: "PizzaPartyAdvancedRandomness",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PizzaPartyAdvancedRandomness__factory>;
    getContractFactory(
      name: "PizzaPartyAnalytics",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PizzaPartyAnalytics__factory>;
    getContractFactory(
      name: "PizzaPartyCore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PizzaPartyCore__factory>;
    getContractFactory(
      name: "IPriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPriceOracle__factory>;
    getContractFactory(
      name: "PizzaPartyDynamicPricing",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PizzaPartyDynamicPricing__factory>;
    getContractFactory(
      name: "PizzaPartyFeeAbstraction",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PizzaPartyFeeAbstraction__factory>;
    getContractFactory(
      name: "PizzaPartyLoyalty",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PizzaPartyLoyalty__factory>;
    getContractFactory(
      name: "PizzaPartyReferral",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PizzaPartyReferral__factory>;
    getContractFactory(
      name: "PizzaPartyWeeklyChallenges",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PizzaPartyWeeklyChallenges__factory>;
    getContractFactory(
      name: "SecureReferralSystem",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SecureReferralSystem__factory>;
    getContractFactory(
      name: "IUniswapV3Factory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3Factory__factory>;
    getContractFactory(
      name: "IUniswapV3Pool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3Pool__factory>;
    getContractFactory(
      name: "UniswapPriceOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapPriceOracle__factory>;

    getContractAt(
      name: "AutomationBase",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AutomationBase>;
    getContractAt(
      name: "AutomationCompatible",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AutomationCompatible>;
    getContractAt(
      name: "AutomationCompatibleInterface",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AutomationCompatibleInterface>;
    getContractAt(
      name: "VRFCoordinatorV2Interface",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VRFCoordinatorV2Interface>;
    getContractAt(
      name: "VRFConsumerBaseV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VRFConsumerBaseV2>;
    getContractAt(
      name: "Ownable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "IERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "Pausable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Pausable>;
    getContractAt(
      name: "ReentrancyGuard",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ReentrancyGuard>;
    getContractAt(
      name: "ChainlinkVRF",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ChainlinkVRF>;
    getContractAt(
      name: "FreePriceOracle",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.FreePriceOracle>;
    getContractAt(
      name: "FreeRandomness",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.FreeRandomness>;
    getContractAt(
      name: "IPizzaParty",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPizzaParty>;
    getContractAt(
      name: "PizzaParty",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PizzaParty>;
    getContractAt(
      name: "PizzaPartyAdvancedRandomness",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PizzaPartyAdvancedRandomness>;
    getContractAt(
      name: "PizzaPartyAnalytics",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PizzaPartyAnalytics>;
    getContractAt(
      name: "PizzaPartyCore",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PizzaPartyCore>;
    getContractAt(
      name: "IPriceOracle",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPriceOracle>;
    getContractAt(
      name: "PizzaPartyDynamicPricing",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PizzaPartyDynamicPricing>;
    getContractAt(
      name: "PizzaPartyFeeAbstraction",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PizzaPartyFeeAbstraction>;
    getContractAt(
      name: "PizzaPartyLoyalty",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PizzaPartyLoyalty>;
    getContractAt(
      name: "PizzaPartyReferral",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PizzaPartyReferral>;
    getContractAt(
      name: "PizzaPartyWeeklyChallenges",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PizzaPartyWeeklyChallenges>;
    getContractAt(
      name: "SecureReferralSystem",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SecureReferralSystem>;
    getContractAt(
      name: "IUniswapV3Factory",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV3Factory>;
    getContractAt(
      name: "IUniswapV3Pool",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV3Pool>;
    getContractAt(
      name: "UniswapPriceOracle",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.UniswapPriceOracle>;

    deployContract(
      name: "AutomationBase",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AutomationBase>;
    deployContract(
      name: "AutomationCompatible",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AutomationCompatible>;
    deployContract(
      name: "AutomationCompatibleInterface",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AutomationCompatibleInterface>;
    deployContract(
      name: "VRFCoordinatorV2Interface",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VRFCoordinatorV2Interface>;
    deployContract(
      name: "VRFConsumerBaseV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VRFConsumerBaseV2>;
    deployContract(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "Pausable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Pausable>;
    deployContract(
      name: "ReentrancyGuard",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ReentrancyGuard>;
    deployContract(
      name: "ChainlinkVRF",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChainlinkVRF>;
    deployContract(
      name: "FreePriceOracle",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FreePriceOracle>;
    deployContract(
      name: "FreeRandomness",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FreeRandomness>;
    deployContract(
      name: "IPizzaParty",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPizzaParty>;
    deployContract(
      name: "PizzaParty",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PizzaParty>;
    deployContract(
      name: "PizzaPartyAdvancedRandomness",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PizzaPartyAdvancedRandomness>;
    deployContract(
      name: "PizzaPartyAnalytics",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PizzaPartyAnalytics>;
    deployContract(
      name: "PizzaPartyCore",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PizzaPartyCore>;
    deployContract(
      name: "IPriceOracle",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPriceOracle>;
    deployContract(
      name: "PizzaPartyDynamicPricing",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PizzaPartyDynamicPricing>;
    deployContract(
      name: "PizzaPartyFeeAbstraction",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PizzaPartyFeeAbstraction>;
    deployContract(
      name: "PizzaPartyLoyalty",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PizzaPartyLoyalty>;
    deployContract(
      name: "PizzaPartyReferral",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PizzaPartyReferral>;
    deployContract(
      name: "PizzaPartyWeeklyChallenges",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PizzaPartyWeeklyChallenges>;
    deployContract(
      name: "SecureReferralSystem",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SecureReferralSystem>;
    deployContract(
      name: "IUniswapV3Factory",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IUniswapV3Factory>;
    deployContract(
      name: "IUniswapV3Pool",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IUniswapV3Pool>;
    deployContract(
      name: "UniswapPriceOracle",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.UniswapPriceOracle>;

    deployContract(
      name: "AutomationBase",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AutomationBase>;
    deployContract(
      name: "AutomationCompatible",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AutomationCompatible>;
    deployContract(
      name: "AutomationCompatibleInterface",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AutomationCompatibleInterface>;
    deployContract(
      name: "VRFCoordinatorV2Interface",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VRFCoordinatorV2Interface>;
    deployContract(
      name: "VRFConsumerBaseV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VRFConsumerBaseV2>;
    deployContract(
      name: "Ownable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "IERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "Pausable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Pausable>;
    deployContract(
      name: "ReentrancyGuard",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ReentrancyGuard>;
    deployContract(
      name: "ChainlinkVRF",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChainlinkVRF>;
    deployContract(
      name: "FreePriceOracle",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FreePriceOracle>;
    deployContract(
      name: "FreeRandomness",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FreeRandomness>;
    deployContract(
      name: "IPizzaParty",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPizzaParty>;
    deployContract(
      name: "PizzaParty",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PizzaParty>;
    deployContract(
      name: "PizzaPartyAdvancedRandomness",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PizzaPartyAdvancedRandomness>;
    deployContract(
      name: "PizzaPartyAnalytics",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PizzaPartyAnalytics>;
    deployContract(
      name: "PizzaPartyCore",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PizzaPartyCore>;
    deployContract(
      name: "IPriceOracle",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPriceOracle>;
    deployContract(
      name: "PizzaPartyDynamicPricing",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PizzaPartyDynamicPricing>;
    deployContract(
      name: "PizzaPartyFeeAbstraction",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PizzaPartyFeeAbstraction>;
    deployContract(
      name: "PizzaPartyLoyalty",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PizzaPartyLoyalty>;
    deployContract(
      name: "PizzaPartyReferral",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PizzaPartyReferral>;
    deployContract(
      name: "PizzaPartyWeeklyChallenges",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PizzaPartyWeeklyChallenges>;
    deployContract(
      name: "SecureReferralSystem",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SecureReferralSystem>;
    deployContract(
      name: "IUniswapV3Factory",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IUniswapV3Factory>;
    deployContract(
      name: "IUniswapV3Pool",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IUniswapV3Pool>;
    deployContract(
      name: "UniswapPriceOracle",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.UniswapPriceOracle>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
  }
}
